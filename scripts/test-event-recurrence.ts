#!/usr/bin/env tsx

import { createEventAction } from "@/actions/event";
import { RecurrenceFrequency, EventStatus, EventCategory } from "@/lib/generated/prisma";

async function testEventRecurrence() {
  console.log("üß™ Test de cr√©ation d'√©v√©nement r√©current");

  const testEventData = {
    title: "Test Event R√©current",
    description: "Un √©v√©nement de test avec r√©currence",
    summary: "Test r√©currence",
    status: EventStatus.DRAFT,
    startDate: "2025-01-15T18:00:00",
    endDate: "2025-01-15T20:00:00",
    isAllDay: false,
    timezone: "Europe/Paris",
    locationName: "Salle de test",
    locationCity: "B√©darieux",
    isFree: true,
    category: EventCategory.WORKSHOP,
    isRecurring: true,
    recurrence: {
      frequency: RecurrenceFrequency.WEEKLY,
      interval: 1,
      count: 5,
      byWeekDay: [3], // Mercredi
      workdaysOnly: false
    }
  };

  try {
    console.log("üì§ Envoi des donn√©es:", JSON.stringify(testEventData, null, 2));
    
    const result = await createEventAction(testEventData);
    
    if (result.success) {
      console.log("‚úÖ √âv√©nement cr√©√© avec succ√®s:", result.data);
    } else {
      console.log("‚ùå Erreur lors de la cr√©ation:", result.error);
    }
  } catch (error) {
    console.error("üí• Exception:", error);
  }
}

testEventRecurrence();